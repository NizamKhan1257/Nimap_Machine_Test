@model PagedList.Core.PagedList<ShopDTOs.ProductDTO>

@{
    ViewData["Title"] = "ProductIndex";
}
@using PagedList.Core;
@using PagedList.Core.Mvc;

<h1>Products List</h1>
<p>
    <a asp-action="ProductAdd" class="btn btn-success">Create New Product</a>
</p>
<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Product ID</th>
            <th>Product Name</th>
            <th>Category ID</th>
            <th>Category Name</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.ProductId</td>
                <td>@item.ProductName</td>
                <td>@item.CategoryId</td>
                <td>@item.CategoryName</td>
                <td>
                    <a href="@Url.Action("ProductUpdate", "Shop", new { id = item.ProductId })" class="btn btn-primary">Edit</a>
                    <a href="@Url.Action("ProductDelete", "Shop", new { id = item.ProductId })" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("ProductIndex", "Shop", new { pageNumber = Model.PageNumber - 1 })">Previous</a>
            </li>
        }

        @for (int i = 1; i <= Model.PageCount; i++)
        {
            <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                <a class="page-link" href="@Url.Action("ProductIndex", "Shop", new { pageNumber = i })">@i</a>
            </li>
        }

        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("ProductIndex", "Shop", new { pageNumber = Model.PageNumber + 1 })">Next</a>
            </li>
        }
    </ul>
</nav>
